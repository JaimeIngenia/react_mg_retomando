{"ast":null,"code":"import { EventEmitter } from \"events\";\nimport Dispatcher from \"../appDispatcher\";\nimport actionTypes from \"../actions/actionTypesProduct__api\";\nconst CHANGE_EVENT = \"change\";\nlet _products = [];\nclass productStore extends EventEmitter {\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  }\n  getProducts() {\n    return _products;\n  }\n  getProductById(id) {\n    return _products.find(p => p.id === id);\n  }\n}\nconst store = new productStore();\nDispatcher.register(action => {\n  switch (action.actionType) {\n    case actionTypes.DELETE_PRODUCT:\n      _products = _products.filter(course => course.id !== parseInt(action.id, 10));\n      store.emitChange();\n      break;\n    case actionTypes.CREATE_PRODUCT:\n      _products.push(action.product);\n      store.emitChange();\n      break;\n    case actionTypes.UPDATE_PRODUCT__API:\n      _products = _products.map(p => p.id === action.product.id ? action.product : p); // Se filtra el id del producto la acción con el id del elemento del product, entonces se guarda el producto de la accion\n      store.emitChange();\n      break;\n    case actionTypes.LOAD_PRODUCT__API:\n      _products = action.products;\n      store.emitChange();\n      break;\n    default:\n      break;\n  }\n});\nexport default store;","map":{"version":3,"names":["EventEmitter","Dispatcher","actionTypes","CHANGE_EVENT","_products","productStore","addChangeListener","callback","on","removeChangeListener","removeListener","emitChange","emit","getProducts","getProductById","id","find","p","store","register","action","actionType","DELETE_PRODUCT","filter","course","parseInt","CREATE_PRODUCT","push","product","UPDATE_PRODUCT__API","map","LOAD_PRODUCT__API","products"],"sources":["E:/Documentos/UTrabajo------------/DilbaniHelps/proyecto1_base_consumo_api_hipotetica/flux_base_MasGlobal/src/stores/productStore__api.js"],"sourcesContent":["import { EventEmitter } from \"events\";\r\nimport Dispatcher from \"../appDispatcher\";\r\nimport actionTypes from \"../actions/actionTypesProduct__api\";\r\n\r\nconst CHANGE_EVENT = \"change\";\r\n\r\nlet _products = [];\r\n\r\nclass productStore extends EventEmitter {\r\n  addChangeListener(callback) {\r\n    this.on(CHANGE_EVENT, callback);\r\n  }\r\n  removeChangeListener(callback) {\r\n    this.removeListener(CHANGE_EVENT, callback);\r\n  }\r\n  emitChange() {\r\n    this.emit(CHANGE_EVENT);\r\n  }\r\n  getProducts() {\r\n    return _products;\r\n  }\r\n\r\n  getProductById(id) {\r\n    return _products.find((p) => p.id === id);\r\n  }\r\n}\r\n\r\nconst store = new productStore();\r\n\r\nDispatcher.register((action) => {\r\n  switch (action.actionType) {\r\n    case actionTypes.DELETE_PRODUCT:\r\n      _products = _products.filter(\r\n        (course) => course.id !== parseInt(action.id, 10)\r\n      );\r\n      store.emitChange();\r\n      break;\r\n\r\n    case actionTypes.CREATE_PRODUCT:\r\n      _products.push(action.product);\r\n      store.emitChange();\r\n      break;\r\n\r\n    case actionTypes.UPDATE_PRODUCT__API:\r\n      _products = _products.map((p) =>\r\n        p.id === action.product.id ? action.product : p\r\n      ); // Se filtra el id del producto la acción con el id del elemento del product, entonces se guarda el producto de la accion\r\n      store.emitChange();\r\n      break;\r\n\r\n    case actionTypes.LOAD_PRODUCT__API:\r\n      _products = action.products;\r\n      store.emitChange();\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,QAAQ;AACrC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,WAAW,MAAM,oCAAoC;AAE5D,MAAMC,YAAY,GAAG,QAAQ;AAE7B,IAAIC,SAAS,GAAG,EAAE;AAElB,MAAMC,YAAY,SAASL,YAAY,CAAC;EACtCM,iBAAiBA,CAACC,QAAQ,EAAE;IAC1B,IAAI,CAACC,EAAE,CAACL,YAAY,EAAEI,QAAQ,CAAC;EACjC;EACAE,oBAAoBA,CAACF,QAAQ,EAAE;IAC7B,IAAI,CAACG,cAAc,CAACP,YAAY,EAAEI,QAAQ,CAAC;EAC7C;EACAI,UAAUA,CAAA,EAAG;IACX,IAAI,CAACC,IAAI,CAACT,YAAY,CAAC;EACzB;EACAU,WAAWA,CAAA,EAAG;IACZ,OAAOT,SAAS;EAClB;EAEAU,cAAcA,CAACC,EAAE,EAAE;IACjB,OAAOX,SAAS,CAACY,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACF,EAAE,KAAKA,EAAE,CAAC;EAC3C;AACF;AAEA,MAAMG,KAAK,GAAG,IAAIb,YAAY,CAAC,CAAC;AAEhCJ,UAAU,CAACkB,QAAQ,CAAEC,MAAM,IAAK;EAC9B,QAAQA,MAAM,CAACC,UAAU;IACvB,KAAKnB,WAAW,CAACoB,cAAc;MAC7BlB,SAAS,GAAGA,SAAS,CAACmB,MAAM,CACzBC,MAAM,IAAKA,MAAM,CAACT,EAAE,KAAKU,QAAQ,CAACL,MAAM,CAACL,EAAE,EAAE,EAAE,CAClD,CAAC;MACDG,KAAK,CAACP,UAAU,CAAC,CAAC;MAClB;IAEF,KAAKT,WAAW,CAACwB,cAAc;MAC7BtB,SAAS,CAACuB,IAAI,CAACP,MAAM,CAACQ,OAAO,CAAC;MAC9BV,KAAK,CAACP,UAAU,CAAC,CAAC;MAClB;IAEF,KAAKT,WAAW,CAAC2B,mBAAmB;MAClCzB,SAAS,GAAGA,SAAS,CAAC0B,GAAG,CAAEb,CAAC,IAC1BA,CAAC,CAACF,EAAE,KAAKK,MAAM,CAACQ,OAAO,CAACb,EAAE,GAAGK,MAAM,CAACQ,OAAO,GAAGX,CAChD,CAAC,CAAC,CAAC;MACHC,KAAK,CAACP,UAAU,CAAC,CAAC;MAClB;IAEF,KAAKT,WAAW,CAAC6B,iBAAiB;MAChC3B,SAAS,GAAGgB,MAAM,CAACY,QAAQ;MAC3Bd,KAAK,CAACP,UAAU,CAAC,CAAC;MAClB;IACF;MACE;EACJ;AACF,CAAC,CAAC;AAEF,eAAeO,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}