{"ast":null,"code":"import { EventEmitter } from \"events\";\nimport Dispatcher from \"../appDispatcher\";\nimport actionTypes from \"../actions/actionTypesCard\";\nconst CHANGE_EVENT = \"change\";\nlet _cards = [{\n  id: 1,\n  cardHolderName: \"Rebecca Soto :\",\n  cardNumber: \"9999 8888 9999 0909\",\n  expDate: \"02/2022\",\n  cvc: \"123\"\n}];\nclass cardStore extends EventEmitter {\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  }\n  getCards() {\n    return _cards;\n  }\n  getCardBySlug(slug) {\n    return _cards.find(course => course.codigoSeguridad === slug);\n  }\n}\nconst store = new cardStore();\nDispatcher.register(action => {\n  switch (action.actionType) {\n    case actionTypes.DELETE_CATEGORY:\n      _cards = _cards.filter(course => course.id !== parseInt(action.id, 10));\n      store.emitChange();\n      break;\n    case actionTypes.CREATE_CARD:\n      _cards.push(action.creditCart);\n      store.emitChange();\n      break;\n    case actionTypes.UPDATE_CATEGORY:\n      _cards = _cards.map(course => course.id === action.category.id ? action.category : course);\n      store.emitChange();\n      break;\n    case actionTypes.LOAD_CARD:\n      _cards = action.creditCards;\n      store.emitChange();\n      break;\n    default:\n    // no poner nada aqui\n  }\n});\n\nexport default store;","map":{"version":3,"names":["EventEmitter","Dispatcher","actionTypes","CHANGE_EVENT","_cards","id","cardHolderName","cardNumber","expDate","cvc","cardStore","addChangeListener","callback","on","removeChangeListener","removeListener","emitChange","emit","getCards","getCardBySlug","slug","find","course","codigoSeguridad","store","register","action","actionType","DELETE_CATEGORY","filter","parseInt","CREATE_CARD","push","creditCart","UPDATE_CATEGORY","map","category","LOAD_CARD","creditCards"],"sources":["E:/Documentos/UTrabajo------------/DilbaniHelps/proyecto1_base_consumo_api_hipotetica/flux_base_MasGlobal/src/stores/cardStore.js"],"sourcesContent":["import { EventEmitter } from \"events\";\r\nimport Dispatcher from \"../appDispatcher\";\r\nimport actionTypes from \"../actions/actionTypesCard\";\r\n\r\nconst CHANGE_EVENT = \"change\";\r\nlet _cards = [\r\n  {\r\n    id: 1,\r\n    cardHolderName: \"Rebecca Soto :\",\r\n    cardNumber: \"9999 8888 9999 0909\",\r\n    expDate: \"02/2022\",\r\n    cvc: \"123\",\r\n  },\r\n];\r\n\r\nclass cardStore extends EventEmitter {\r\n  addChangeListener(callback) {\r\n    this.on(CHANGE_EVENT, callback);\r\n  }\r\n  removeChangeListener(callback) {\r\n    this.removeListener(CHANGE_EVENT, callback);\r\n  }\r\n  emitChange() {\r\n    this.emit(CHANGE_EVENT);\r\n  }\r\n  getCards() {\r\n    return _cards;\r\n  }\r\n  getCardBySlug(slug) {\r\n    return _cards.find((course) => course.codigoSeguridad === slug);\r\n  }\r\n}\r\n\r\nconst store = new cardStore();\r\n\r\nDispatcher.register((action) => {\r\n  switch (action.actionType) {\r\n    case actionTypes.DELETE_CATEGORY:\r\n      _cards = _cards.filter((course) => course.id !== parseInt(action.id, 10));\r\n      store.emitChange();\r\n      break;\r\n\r\n    case actionTypes.CREATE_CARD:\r\n      _cards.push(action.creditCart);\r\n      store.emitChange();\r\n      break;\r\n\r\n    case actionTypes.UPDATE_CATEGORY:\r\n      _cards = _cards.map((course) =>\r\n        course.id === action.category.id ? action.category : course\r\n      );\r\n      store.emitChange();\r\n      break;\r\n\r\n    case actionTypes.LOAD_CARD:\r\n      _cards = action.creditCards;\r\n      store.emitChange();\r\n      break;\r\n    default:\r\n    // no poner nada aqui\r\n  }\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,QAAQ;AACrC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,WAAW,MAAM,4BAA4B;AAEpD,MAAMC,YAAY,GAAG,QAAQ;AAC7B,IAAIC,MAAM,GAAG,CACX;EACEC,EAAE,EAAE,CAAC;EACLC,cAAc,EAAE,gBAAgB;EAChCC,UAAU,EAAE,qBAAqB;EACjCC,OAAO,EAAE,SAAS;EAClBC,GAAG,EAAE;AACP,CAAC,CACF;AAED,MAAMC,SAAS,SAASV,YAAY,CAAC;EACnCW,iBAAiBA,CAACC,QAAQ,EAAE;IAC1B,IAAI,CAACC,EAAE,CAACV,YAAY,EAAES,QAAQ,CAAC;EACjC;EACAE,oBAAoBA,CAACF,QAAQ,EAAE;IAC7B,IAAI,CAACG,cAAc,CAACZ,YAAY,EAAES,QAAQ,CAAC;EAC7C;EACAI,UAAUA,CAAA,EAAG;IACX,IAAI,CAACC,IAAI,CAACd,YAAY,CAAC;EACzB;EACAe,QAAQA,CAAA,EAAG;IACT,OAAOd,MAAM;EACf;EACAe,aAAaA,CAACC,IAAI,EAAE;IAClB,OAAOhB,MAAM,CAACiB,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,eAAe,KAAKH,IAAI,CAAC;EACjE;AACF;AAEA,MAAMI,KAAK,GAAG,IAAId,SAAS,CAAC,CAAC;AAE7BT,UAAU,CAACwB,QAAQ,CAAEC,MAAM,IAAK;EAC9B,QAAQA,MAAM,CAACC,UAAU;IACvB,KAAKzB,WAAW,CAAC0B,eAAe;MAC9BxB,MAAM,GAAGA,MAAM,CAACyB,MAAM,CAAEP,MAAM,IAAKA,MAAM,CAACjB,EAAE,KAAKyB,QAAQ,CAACJ,MAAM,CAACrB,EAAE,EAAE,EAAE,CAAC,CAAC;MACzEmB,KAAK,CAACR,UAAU,CAAC,CAAC;MAClB;IAEF,KAAKd,WAAW,CAAC6B,WAAW;MAC1B3B,MAAM,CAAC4B,IAAI,CAACN,MAAM,CAACO,UAAU,CAAC;MAC9BT,KAAK,CAACR,UAAU,CAAC,CAAC;MAClB;IAEF,KAAKd,WAAW,CAACgC,eAAe;MAC9B9B,MAAM,GAAGA,MAAM,CAAC+B,GAAG,CAAEb,MAAM,IACzBA,MAAM,CAACjB,EAAE,KAAKqB,MAAM,CAACU,QAAQ,CAAC/B,EAAE,GAAGqB,MAAM,CAACU,QAAQ,GAAGd,MACvD,CAAC;MACDE,KAAK,CAACR,UAAU,CAAC,CAAC;MAClB;IAEF,KAAKd,WAAW,CAACmC,SAAS;MACxBjC,MAAM,GAAGsB,MAAM,CAACY,WAAW;MAC3Bd,KAAK,CAACR,UAAU,CAAC,CAAC;MAClB;IACF;IACA;EACF;AACF,CAAC,CAAC;;AAEF,eAAeQ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}