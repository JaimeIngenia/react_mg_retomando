{"ast":null,"code":"import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrlCreditCards = process.env.REACT_APP_API_URL + \"/debitCards/\";\nexport function getCreditCards() {\n  return fetch(baseUrlCreditCards).then(handleResponse).catch(handleError);\n}\nexport function saveCreditCard(course) {\n  return fetch(baseUrlCreditCards + (course.id || \"\"), {\n    method: course.id ? \"PUT\" : \"POST\",\n    // POST for create, PUT to update when id already exists.\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      ...course\n      // Parse authorId to a number (in case it was sent as a string).\n      // authorId: parseInt(course.authorId, 10),\n    })\n  }).then(handleResponse).catch(handleError);\n}\n\n// export function saveCreditCard(course) {\n//   return fetch(baseUrl + (course.id || \"\"), {\n//     method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n//     headers: { \"content-type\": \"application/json\" },\n//     body: JSON.stringify({\n//       ...course,\n//       // Parse authorId to a number (in case it was sent as a string).\n//       authorId: parseInt(course.authorId, 10),\n//     }),\n//   })\n//     .then(handleResponse)\n//     .catch(handleError);\n// }","map":{"version":3,"names":["handleResponse","handleError","baseUrlCreditCards","process","env","REACT_APP_API_URL","getCreditCards","fetch","then","catch","saveCreditCard","course","id","method","headers","body","JSON","stringify"],"sources":["E:/Documentos/UTrabajo------------/DilbaniHelps/proyecto1_base_consumo_api_hipotetica/flux_base_MasGlobal/src/api/CreditCardApi.js"],"sourcesContent":["import { handleResponse, handleError } from \"./apiUtils\";\r\n\r\nconst baseUrlCreditCards = process.env.REACT_APP_API_URL + \"/debitCards/\";\r\n\r\nexport function getCreditCards() {\r\n  return fetch(baseUrlCreditCards).then(handleResponse).catch(handleError);\r\n}\r\n\r\nexport function saveCreditCard(course) {\r\n  return fetch(baseUrlCreditCards + (course.id || \"\"), {\r\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      ...course,\r\n      // Parse authorId to a number (in case it was sent as a string).\r\n      // authorId: parseInt(course.authorId, 10),\r\n    }),\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\n// export function saveCreditCard(course) {\r\n//   return fetch(baseUrl + (course.id || \"\"), {\r\n//     method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\r\n//     headers: { \"content-type\": \"application/json\" },\r\n//     body: JSON.stringify({\r\n//       ...course,\r\n//       // Parse authorId to a number (in case it was sent as a string).\r\n//       authorId: parseInt(course.authorId, 10),\r\n//     }),\r\n//   })\r\n//     .then(handleResponse)\r\n//     .catch(handleError);\r\n// }\r\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,YAAY;AAExD,MAAMC,kBAAkB,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,cAAc;AAEzE,OAAO,SAASC,cAAcA,CAAA,EAAG;EAC/B,OAAOC,KAAK,CAACL,kBAAkB,CAAC,CAACM,IAAI,CAACR,cAAc,CAAC,CAACS,KAAK,CAACR,WAAW,CAAC;AAC1E;AAEA,OAAO,SAASS,cAAcA,CAACC,MAAM,EAAE;EACrC,OAAOJ,KAAK,CAACL,kBAAkB,IAAIS,MAAM,CAACC,EAAE,IAAI,EAAE,CAAC,EAAE;IACnDC,MAAM,EAAEF,MAAM,CAACC,EAAE,GAAG,KAAK,GAAG,MAAM;IAAE;IACpCE,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnB,GAAGN;MACH;MACA;IACF,CAAC;EACH,CAAC,CAAC,CACCH,IAAI,CAACR,cAAc,CAAC,CACpBS,KAAK,CAACR,WAAW,CAAC;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}