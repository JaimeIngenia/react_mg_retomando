{"ast":null,"code":"import { EventEmitter } from \"events\";\nimport Dispatcher from \"../appDispatcher\";\nimport actionTypes from \"../actions/actionTypesProductShopping\";\nconst CHANGE_EVENT = \"change\";\nlet _productsShopping = [];\nclass ProductShoppingStore extends EventEmitter {\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  }\n  getProductsShopping() {\n    return _productsShopping;\n  }\n  getProductShoppingById(id) {\n    return _productsShopping.find(p => p.id === id);\n  }\n  getTotalCant() {\n    let suma = 0;\n    _productsShopping.forEach(ps => suma += ps.count);\n    return suma;\n  }\n  getTotaSumProductsPrice() {\n    let sumaPrices = 0;\n    _productsShopping.forEach(ps => sumaPrices += Number(ps.price));\n    return sumaPrices;\n  }\n}\nconst store = new ProductShoppingStore();\nDispatcher.register(action => {\n  switch (action.actionType) {\n    case actionTypes.DELETE_PRODUCT_SHOPPING:\n      // debugger;\n      _productsShopping = _productsShopping.filter(course => course.id !== parseInt(action.id, 10));\n      store.emitChange();\n      break;\n    case actionTypes.CREATE_PRODUCT_SHOPPING:\n      _productsShopping.push(action.product);\n      store.emitChange();\n      break;\n    case actionTypes.UPDATE_PRODUCT_SHOPPING:\n      _productsShopping = _productsShopping.map(p => p.id === action.product.id ? action.product : p);\n      store.emitChange();\n      break;\n    case actionTypes.LOAD_PRODUCT_SHOPPING:\n      _productsShopping = action.LOAD_PRODUCT_SHOPPING;\n      store.emitChange();\n      break;\n    default:\n      break;\n  }\n});\nexport default store;","map":{"version":3,"names":["EventEmitter","Dispatcher","actionTypes","CHANGE_EVENT","_productsShopping","ProductShoppingStore","addChangeListener","callback","on","removeChangeListener","removeListener","emitChange","emit","getProductsShopping","getProductShoppingById","id","find","p","getTotalCant","suma","forEach","ps","count","getTotaSumProductsPrice","sumaPrices","Number","price","store","register","action","actionType","DELETE_PRODUCT_SHOPPING","filter","course","parseInt","CREATE_PRODUCT_SHOPPING","push","product","UPDATE_PRODUCT_SHOPPING","map","LOAD_PRODUCT_SHOPPING"],"sources":["E:/Documentos/UTrabajo------------/DilbaniHelps/proyecto1_base_consumo_api_hipotetica/flux_base_MasGlobal/src/stores/productShoppingStore.js"],"sourcesContent":["import { EventEmitter } from \"events\";\r\nimport Dispatcher from \"../appDispatcher\";\r\nimport actionTypes from \"../actions/actionTypesProductShopping\";\r\n\r\nconst CHANGE_EVENT = \"change\";\r\n\r\nlet _productsShopping = [];\r\n\r\nclass ProductShoppingStore extends EventEmitter {\r\n  addChangeListener(callback) {\r\n    this.on(CHANGE_EVENT, callback);\r\n  }\r\n  removeChangeListener(callback) {\r\n    this.removeListener(CHANGE_EVENT, callback);\r\n  }\r\n  emitChange() {\r\n    this.emit(CHANGE_EVENT);\r\n  }\r\n  getProductsShopping() {\r\n    return _productsShopping;\r\n  }\r\n  getProductShoppingById(id) {\r\n    return _productsShopping.find((p) => p.id === id);\r\n  }\r\n\r\n  getTotalCant() {\r\n    let suma = 0;\r\n    _productsShopping.forEach((ps) => (suma += ps.count));\r\n    return suma;\r\n  }\r\n  getTotaSumProductsPrice() {\r\n    let sumaPrices = 0;\r\n    _productsShopping.forEach((ps) => (sumaPrices += Number(ps.price)));\r\n    return sumaPrices;\r\n  }\r\n}\r\n\r\nconst store = new ProductShoppingStore();\r\n\r\nDispatcher.register((action) => {\r\n  switch (action.actionType) {\r\n    case actionTypes.DELETE_PRODUCT_SHOPPING:\r\n      // debugger;\r\n      _productsShopping = _productsShopping.filter(\r\n        (course) => course.id !== parseInt(action.id, 10)\r\n      );\r\n      store.emitChange();\r\n      break;\r\n\r\n    case actionTypes.CREATE_PRODUCT_SHOPPING:\r\n      _productsShopping.push(action.product);\r\n      store.emitChange();\r\n      break;\r\n\r\n    case actionTypes.UPDATE_PRODUCT_SHOPPING:\r\n      _productsShopping = _productsShopping.map((p) =>\r\n        p.id === action.product.id ? action.product : p\r\n      );\r\n      store.emitChange();\r\n      break;\r\n\r\n    case actionTypes.LOAD_PRODUCT_SHOPPING:\r\n      _productsShopping = action.LOAD_PRODUCT_SHOPPING;\r\n      store.emitChange();\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,QAAQ;AACrC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,WAAW,MAAM,uCAAuC;AAE/D,MAAMC,YAAY,GAAG,QAAQ;AAE7B,IAAIC,iBAAiB,GAAG,EAAE;AAE1B,MAAMC,oBAAoB,SAASL,YAAY,CAAC;EAC9CM,iBAAiBA,CAACC,QAAQ,EAAE;IAC1B,IAAI,CAACC,EAAE,CAACL,YAAY,EAAEI,QAAQ,CAAC;EACjC;EACAE,oBAAoBA,CAACF,QAAQ,EAAE;IAC7B,IAAI,CAACG,cAAc,CAACP,YAAY,EAAEI,QAAQ,CAAC;EAC7C;EACAI,UAAUA,CAAA,EAAG;IACX,IAAI,CAACC,IAAI,CAACT,YAAY,CAAC;EACzB;EACAU,mBAAmBA,CAAA,EAAG;IACpB,OAAOT,iBAAiB;EAC1B;EACAU,sBAAsBA,CAACC,EAAE,EAAE;IACzB,OAAOX,iBAAiB,CAACY,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACF,EAAE,KAAKA,EAAE,CAAC;EACnD;EAEAG,YAAYA,CAAA,EAAG;IACb,IAAIC,IAAI,GAAG,CAAC;IACZf,iBAAiB,CAACgB,OAAO,CAAEC,EAAE,IAAMF,IAAI,IAAIE,EAAE,CAACC,KAAM,CAAC;IACrD,OAAOH,IAAI;EACb;EACAI,uBAAuBA,CAAA,EAAG;IACxB,IAAIC,UAAU,GAAG,CAAC;IAClBpB,iBAAiB,CAACgB,OAAO,CAAEC,EAAE,IAAMG,UAAU,IAAIC,MAAM,CAACJ,EAAE,CAACK,KAAK,CAAE,CAAC;IACnE,OAAOF,UAAU;EACnB;AACF;AAEA,MAAMG,KAAK,GAAG,IAAItB,oBAAoB,CAAC,CAAC;AAExCJ,UAAU,CAAC2B,QAAQ,CAAEC,MAAM,IAAK;EAC9B,QAAQA,MAAM,CAACC,UAAU;IACvB,KAAK5B,WAAW,CAAC6B,uBAAuB;MACtC;MACA3B,iBAAiB,GAAGA,iBAAiB,CAAC4B,MAAM,CACzCC,MAAM,IAAKA,MAAM,CAAClB,EAAE,KAAKmB,QAAQ,CAACL,MAAM,CAACd,EAAE,EAAE,EAAE,CAClD,CAAC;MACDY,KAAK,CAAChB,UAAU,CAAC,CAAC;MAClB;IAEF,KAAKT,WAAW,CAACiC,uBAAuB;MACtC/B,iBAAiB,CAACgC,IAAI,CAACP,MAAM,CAACQ,OAAO,CAAC;MACtCV,KAAK,CAAChB,UAAU,CAAC,CAAC;MAClB;IAEF,KAAKT,WAAW,CAACoC,uBAAuB;MACtClC,iBAAiB,GAAGA,iBAAiB,CAACmC,GAAG,CAAEtB,CAAC,IAC1CA,CAAC,CAACF,EAAE,KAAKc,MAAM,CAACQ,OAAO,CAACtB,EAAE,GAAGc,MAAM,CAACQ,OAAO,GAAGpB,CAChD,CAAC;MACDU,KAAK,CAAChB,UAAU,CAAC,CAAC;MAClB;IAEF,KAAKT,WAAW,CAACsC,qBAAqB;MACpCpC,iBAAiB,GAAGyB,MAAM,CAACW,qBAAqB;MAChDb,KAAK,CAAChB,UAAU,CAAC,CAAC;MAClB;IACF;MACE;EACJ;AACF,CAAC,CAAC;AAEF,eAAegB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}