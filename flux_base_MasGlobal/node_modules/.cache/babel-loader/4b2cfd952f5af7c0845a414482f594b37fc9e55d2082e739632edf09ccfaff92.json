{"ast":null,"code":"export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}","map":{"version":3,"names":["handleResponse","response","ok","json","status","error","text","Error","handleError","console"],"sources":["E:/Documentos/UTrabajo------------/DilbaniHelps/proyecto1_base_consumo_api_hipotetica/flux_base_MasGlobal/src/api/apiUtils.js"],"sourcesContent":["export async function handleResponse(response) {\r\n  if (response.ok) return response.json();\r\n  if (response.status === 400) {\r\n    // So, a server-side validation error occurred.\r\n    // Server side validation returns a string error message, so parse as text instead of json.\r\n    const error = await response.text();\r\n    throw new Error(error);\r\n  }\r\n  throw new Error(\"Network response was not ok.\");\r\n}\r\n\r\n// In a real app, would likely call an error logging service.\r\nexport function handleError(error) {\r\n  // eslint-disable-next-line no-console\r\n  console.error(\"API call failed. \" + error);\r\n  throw error;\r\n}\r\n"],"mappings":"AAAA,OAAO,eAAeA,cAAcA,CAACC,QAAQ,EAAE;EAC7C,IAAIA,QAAQ,CAACC,EAAE,EAAE,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;EACvC,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;IAC3B;IACA;IACA,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAAC;EACxB;EACA,MAAM,IAAIE,KAAK,CAAC,8BAA8B,CAAC;AACjD;;AAEA;AACA,OAAO,SAASC,WAAWA,CAACH,KAAK,EAAE;EACjC;EACAI,OAAO,CAACJ,KAAK,CAAC,mBAAmB,GAAGA,KAAK,CAAC;EAC1C,MAAMA,KAAK;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}